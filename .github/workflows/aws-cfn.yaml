name: AWS CloudFormation

on:
  workflow_dispatch:
    inputs:
      cloudformation_template_folder:
        description: 'CloudFormation template file'
        required: true
        default: 'containers'
      cloudformation_stack_name:
        description: 'CloudFormation stack name'
        required: true
        default: 'basic-eks'
      cloudformation_action:
        description: 'CloudFormation action to perform (apply or delete)'
        required: true
        default: 'apply'

jobs:
  aws-cfn:
    permissions:
      id-token: write # to request tokens for AWS CLI
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{secrets.AWS_ROLE_ARN}}
          aws-region: ${{vars.AWS_REGION}}

      - name: "DEBUG: print workflow inputs"
        run: |
          echo "cloudformation_template_folder == ${{github.event.inputs.cloudformation_template_folder}}"
          echo "cloudformation_stack_name == ${{github.event.inputs.cloudformation_stack_name}}"
          echo "cloudformation_action == ${{github.event.inputs.cloudformation_action}}"    

      - name: Current Stack State
        id: stack_state
        run: |
          STACK_STATUS=$(aws cloudformation describe-stacks --stack-name ${{github.event.inputs.cloudformation_stack_name}} --region ${{vars.AWS_REGION}} --query "Stacks[0].StackStatus" --output text 2>/dev/null || echo "STACK_NOT_FOUND")
          echo "status=$STACK_STATUS" && echo "status=$STACK_STATUS" >> $GITHUB_OUTPUT

      - name: Delete if in ROLLBACK_COMPLETE state
        if: steps.stack_state.outputs.status == 'ROLLBACK_COMPLETE'
        run: |
          echo "Stack is in ROLLBACK_COMPLETE state, deleting..."
          aws cloudformation delete-stack --stack-name ${{github.event.inputs.cloudformation_stack_name}} --region ${{vars.AWS_REGION}}
          echo "Waiting for stack to be deleted..."
          aws cloudformation wait stack-delete-complete --stack-name ${{github.event.inputs.cloudformation_stack_name}} --region ${{vars.AWS_REGION}}
          echo "Stack deleted."

      - name: Create if not found
        if: steps.stack_state.outputs.status == 'STACK_NOT_FOUND' || steps.stack_state.outputs.status == 'ROLLBACK_COMPLETE'
        run: |
          echo "Stack does not exist, creating..."
          aws cloudformation create-stack \
            --stack-name ${{github.event.inputs.cloudformation_stack_name}} \
            --template-body file://resources/${{github.event.inputs.cloudformation_template_folder}}/${{github.event.inputs.cloudformation_stack_name}}-cfn.yaml \
            --capabilities CAPABILITY_NAMED_IAM \
            --region ${{vars.AWS_REGION}}
          echo "Waiting for stack to be created..."
          aws cloudformation wait stack-create-complete --stack-name ${{github.event.inputs.cloudformation_stack_name}} --region ${{vars.AWS_REGION}}
          echo "Stack created."

      - name: Update if exists
        if: steps.stack_state.outputs.status != 'STACK_NOT_FOUND' && steps.stack_state.outputs.status != 'ROLLBACK_COMPLETE'
        run: |
          echo "Stack exists, updating..."
          aws cloudformation update-stack \
            --stack-name ${{github.event.inputs.cloudformation_stack_name}} \
            --template-body file://resources/${{github.event.inputs.cloudformation_template_folder}}/${{github.event.inputs.cloudformation_stack_name}}-cfn.yaml \
            --capabilities CAPABILITY_NAMED_IAM \
            --region ${{vars.AWS_REGION}}
          echo "Waiting for stack to be updated..."
          aws cloudformation wait stack-update-complete --stack-name ${{github.event.inputs.cloudformation_stack_name}} --region ${{vars.AWS_REGION}}
          echo "Stack updated."

      - name: CloudFormation Delete Stack
        if: github.event.inputs.cloudformation_action == 'delete'
        run: |
          echo "Delete == ${{github.event.inputs.cloudformation_action}}"
          aws cloudformation delete-stack \
            --stack-name ${{github.event.inputs.cloudformation_stack_name}} \
            --region ${{vars.AWS_REGION}}

      - name: CloudFormation Describe Stack
        run: |
          aws cloudformation describe-stacks \
            --stack-name ${{github.event.inputs.cloudformation_stack_name}} \
            --region ${{vars.AWS_REGION}}