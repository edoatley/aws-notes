name: AWS CloudFormation

on:
  workflow_dispatch:
    inputs:
      cloudformation_template_folder:
        description: 'CloudFormation template file'
        required: true
        default: 'vpc'
      cloudformation_stack_name:
        description: 'CloudFormation stack name'
        required: true
        default: 'simple-vpc'
      cloudformation_action:
        description: 'CloudFormation action to perform'
        required: true
        default: 'create'

jobs:
  aws-cfn:
    permissions:
      id-token: write # to request tokens for AWS CLI
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{secrets.AWS_ROLE_ARN}}
          aws-region: ${{vars.AWS_REGION}}

      - name: CloudFormation Create Stack
        if: ${{github.event.inputs.cloudformation_action}} == "create"
        run: |
          echo "Create == ${{github.event.inputs.cloudformation_action}}"
          aws cloudformation create-stack \
            --stack-name ${{github.event.inputs.cloudformation_stack_name}} \
            --template-body file://${{github.event.inputs.cloudformation_template_folder}}/${{github.event.inputs.cloudformation_stack_name}}-cfn.yaml \
            --capabilities CAPABILITY_NAMED_IAM \
            --region ${{vars.AWS_REGION}}

      - name: CloudFormation Delete Stack
        if: ${{github.event.inputs.cloudformation_action}} == "delete"
        run: |
          echo "Delete == ${{github.event.inputs.cloudformation_action}}"
          aws cloudformation delete-stack \
            --stack-name ${{github.event.inputs.cloudformation_stack_name}} \
            --region ${{vars.AWS_REGION}}

      - name: CloudFormation Describe Stack
        run: |
          aws cloudformation describe-stacks \
            --stack-name ${{github.event.inputs.cloudformation_stack_name}} \
            --region ${{vars.AWS_REGION}}